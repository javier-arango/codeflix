// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Video {
  videoId       String   @id
  url           String
  title         String
  duration      String
  categoryId    String
  description   String
  publishedAt   DateTime
  channelTitle  String
  thumbnailUrl  String
  viewsCount    Int      @default(0)
  likesCount    Int      @default(0)
  commentsCount Int      @default(0)
  channelId     String
  channel       Channel  @relation(fields: [channelId], references: [channelId])
}

model Channel {
  channelId        String   @id
  url              String
  title            String
  description      String
  publishedAt      DateTime
  thumbnailUrl     String
  viewsCount       Int      @default(0)
  subscribersCount Int      @default(0)
  videos           Video[]
}

model User {
  id        String   @id @default(cuid())
  firstName String?
  lastName  String?
  email     String   @unique
  password  String
  avatar    String?  @default("https://res.cloudinary.com/dp28illl8/image/upload/v1698787786/profile/default_avatar.jpg")
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model Playlist {
//   playlistId  String  @id @default(uuid())
//   name        String
//   description String?
//   userId      String
//   user        User    @relation(fields: [userId], references: [userId])
//   videos      Video[]
// }

// model History {
//   historyId String   @id @default(uuid())
//   viewDate  DateTime
//   userId    String
//   user      User     @relation(fields: [userId], references: [userId])
//   videoId   String
//   video     Video    @relation(fields: [videoId], references: [videoId])
// }

// model VideoComment {
//   commentId  String   @id @default(uuid())
//   comment    String
//   datePosted DateTime
//   userId     String
//   user       User     @relation(fields: [userId], references: [userId])
//   videoId    String
//   video      Video    @relation(fields: [videoId], references: [videoId])
// }

// model VideoTag {
//   tagId   String @id @default(uuid())
//   tagName String
//   videoId String
//   video   Video  @relation(fields: [videoId], references: [videoId])
// }
